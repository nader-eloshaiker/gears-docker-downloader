version: '3.7'

services:
  transmission:
    image: "linuxserver/transmission"
    restart: always
    container_name: "transmission"
    # network_mode: "host"
    volumes:
      - "./config/transmission:/config"
      # - "/share/Download/.transmission/torrents:/config/torrents"
      # - "/share/Download/.transmission/resume:/config/resume"
      - "/share/Download/.transmission/incomplete:/incomplete"
      - "/share/Download:/downloads"
    env_file:
      - .env
      - .transmission.env
    ports:
      - 9091:9091
      - 45555:45555
      - 45555:45555/udp
    networks:
      - torrent
      - proxy-network
    labels:
      traefik.enable: true
      traefik.http.routers.transmission.entrypoints: websecure
      traefik.http.routers.transmission.tls: true
      traefik.http.routers.transmission.middlewares: Authelia@file, HstsHeader@file, RateLimit@file
      traefik.http.routers.transmission.service: transmission
      traefik.http.services.transmission.loadbalancer.server.port: 9091
      traefik.http.services.transmission.loadbalancer.server.scheme: http
      # traefik.http.routers.transmissionAPI.rule: Host(`transmission.eloshaiker.com`) && PathPrefix(`/transmission/rpc`)
      # traefik.http.routers.transmissionAPI.entrypoints: websecure
      # traefik.http.routers.transmissionAPI.tls: true
      # traefik.http.routers.transmissionAPI.middlewares: HstsHeader@file, RateLimit@file
      # traefik.http.routers.transmissionAPI.service: transmissionAPI
      # traefik.http.services.transmissionAPI.loadbalancer.server.port: 9091
      # traefik.http.services.transmissionAPI.loadbalancer.server.scheme: http

  sonarr:
    image: "linuxserver/sonarr"
    restart: always
    container_name: "sonarr"
    volumes:
      - ./config/sonarr:/config
      - /share/Download:/downloads
      - /share/Media/Videos:/tv
    ports:
      - "8989:8989"
    env_file:
      - .env
    networks:
      - torrent
      - proxy-network
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entrypoints: websecure
      traefik.http.routers.sonarr.tls: true
      traefik.http.routers.sonarr.middlewares: Authelia@file, HstsHeader@file, RateLimit@file
      traefik.http.routers.sonarr.service: sonarr
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.services.sonarr.loadbalancer.server.scheme: http
      # traefik.http.routers.sonarrAPI.rule: Host(`sonarr.eloshaiker.com`) && PathPrefix(`/api`)
      # traefik.http.routers.sonarrAPI.entrypoints: websecure
      # traefik.http.routers.sonarrAPI.tls: true
      # traefik.http.routers.sonarrAPI.middlewares: HstsHeader@file, RateLimit@file
      # traefik.http.routers.sonarrAPI.service: sonarrAPI
      # traefik.http.services.sonarrAPI.loadbalancer.server.port: 8989
      # traefik.http.services.sonarrAPI.loadbalancer.server.scheme: http

  radarr:
    image: "linuxserver/radarr:latest"
    restart: always
    container_name: "radarr"
    volumes:
      - "./config/radarr:/config"
      - "/share/Download:/downloads"
      - "/share/Media/Videos:/media"
    ports:
      - "7878:7878"
    env_file:
      - .env
    networks:
      - torrent
      - proxy-network
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entrypoints: websecure
      traefik.http.routers.radarr.tls: true
      traefik.http.routers.radarr.middlewares: Authelia@file, HstsHeader@file, RateLimit@file
      traefik.http.routers.radarr.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.services.radarr.loadbalancer.server.scheme: http
      # traefik.http.routers.radarrAPI.rule: Host(`radarr.eloshaiker.com`) && PathPrefix(`/api`)
      # traefik.http.routers.radarrAPI.entrypoints: websecure
      # traefik.http.routers.radarrAPI.tls: true
      # traefik.http.routers.radarrAPI.middlewares: HstsHeader@file, RateLimit@file
      # traefik.http.routers.radarrAPI.service: radarrAPI
      # traefik.http.services.radarrAPI.loadbalancer.server.port: 7878
      # traefik.http.services.radarrAPI.loadbalancer.server.scheme: http

networks:
  proxy-network:
    external: true
  torrent:
    external: false

